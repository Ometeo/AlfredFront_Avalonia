name: Sonar
on: 
  push:
    branches:
      - 'main'
      - 'develop' 
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: SonarAnalysis
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'        
        shell: powershell
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global JetBrains.dotCover.GlobalTool
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          cd AlfredFront
          dotnet restore
          dotnet sonarscanner begin /k:"Ometeo_AlfredFront_Avalonia" /o:"ometeo" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.dotcover.reportsPaths="dotCover.Output.html"
          dotnet build --configuration Release
          dotnet dotcover test --dcReportType=HTML
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          